package MonProgramme;

import JSON.WeatherHttpClient;
import MonIHM.FenetrePrincipale;

public class ThreadInfoJSON extends Thread{
	private static FenetrePrincipale monIHM;
	private static WeatherHttpClient monclient;
	private boolean flagStopThreadSurveillanceBouton = false;
	
	//Lorsque l'on crée le thread on lui passe un pointeur sur l'interface graphique pour y accéder
	public ThreadInfoJSON(FenetrePrincipale monIHMPrincipale)
	{
		monIHM = monIHMPrincipale;
	}

	// corps du code traité par le thread
	public void run()
	{	
		boolean booleanAfficheEfface = true;
		
		System.out.println("Debut du thread < Surveillance boutons >");
		while(flagStopThreadSurveillanceBouton==false)
		{
			
			//On a cliqué sur le bouton de demande d'affichage du message
			if(monIHM.getEtatBoutonAfficherLeMessage()==true)
			{
				System.out.println("Clique sur < Bouton : afficher le message >");
				if(booleanAfficheEfface == true){
					monIHM.setText_lblLeMessageAffiche("Hello");
					monIHM.setEtatBoutonAfficherLeMessage(false);
					booleanAfficheEfface = false;
				}
				else{ //On efface le message au click suivant
					monIHM.setText_lblLeMessageAffiche("");
					monIHM.setEtatBoutonAfficherLeMessage(false);
					booleanAfficheEfface = true;
				}
			}
			
			//Test bouton ajout
			if(monIHM.getEtatBoutonAM()==true)
			{
				System.out.println("Clique sur < Bouton : Ajout Meteoscope >");
				String Ville = monIHM.txtVille.getText();
				System.out.println("" + Ville);
				String Data = monclient.getWeatherData("" + Ville);
				System.out.print("Data: " + Data);
				if(booleanAfficheEfface == true){
					monIHM.setText_lblLeMessageAffiche("");
					monIHM.setEtatBoutonAM(false);
					booleanAfficheEfface = false;
				}
				else{ //On efface le message au click suivant
					monIHM.setText_lblLeMessageAffiche("");
					monIHM.setEtatBoutonAM(false);
					booleanAfficheEfface = true;
				}
			}
			
			/*On a cliqué sur le bouton quitter*/
			if(monIHM.getEtatBoutonQuitter()==true){
				System.out.println("Clique sur < Bouton : Quitter >");
				flagStopThreadSurveillanceBouton=true;
			}
			
			
			/**********************************************************/
			/**                                                      **/
			/** TO DO traiter ici les autres boutons si ils existent **/
			/**														 **/
			/**********************************************************/
 
			
			try {
				// !!!!! obligatoire permet une temporisation pour la prise en compte des événements de l'IHM, delai de 1ms
				Thread.sleep(1);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println("Fin du thread < Surveillance boutons >");
		monIHM.FermerIHM();
	}
	
	//Methode pour detruire la boucle infinie du thread, fermeture propre du thread
	public void stopThreadSurveillanceBouton()
	{
		//On positionne la variable flagStopThreadSurveillanceBouton pour arrêter la boucle du thread de surveillance 
		flagStopThreadSurveillanceBouton = true;
	}
}
